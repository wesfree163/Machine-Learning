images = []
labels = []

# Load images and labels
for class_name in os.listdir(image_dir):
    class_path = os.path.join(image_dir, class_name)
    if os.path.isdir(class_path):
        for image_filename in os.listdir(class_path):
            image_path = os.path.join(class_path, image_filename)
            try:
                img = imread(image_path)
                img_resized = resize(img, image_size, anti_aliasing=True)
                # Flatten the image for feature representation
                images.append(img_resized.flatten())
                labels.append(class_name)
            except Exception as e:
                print(f"Error loading {image_path}: {e}")

X = numpy.array(images)
y = numpy.array(labels)

# Split data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train a classifier
classifier = SVC(kernel='linear', random_state=42)
classifier.fit(X_train, y_train)

# Evaluate
y_pred = classifier.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy}")
